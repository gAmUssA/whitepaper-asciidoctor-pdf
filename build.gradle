import org.asciidoctor.gradle.jvm.pdf.AsciidoctorPdfTask

plugins {
  id 'org.asciidoctor.jvm.convert' version '3.1.0'
  id 'org.asciidoctor.jvm.pdf' version '3.1.0'
}

repositories {
  jcenter()
}

pdfThemes {
  ['custom'].each { tName ->
    local tName, {
      themeDir = 'src/docs/asciidoc/theme'
    }
  }
}

tasks.withType(AsciidoctorPdfTask) {
  outputDir "${buildDir}/docs"
  attributes 'build-gradle': file('build.gradle'),
             'endpoint-url': 'https://confluent.io',
             'source-highlighter': 'coderay',
             'icons': 'font',
             'idprefix': '',
             'idseparator': '-'
  fontsDir 'src/docs/asciidoc/theme/fonts'
  theme 'custom'
}

tasks.create("buildWhitepaper", AsciidoctorPdfTask) { myTask ->
  description "Generate specified White Paper"
  group "Whitepapers"

  def whitePaperName
  doFirst {
    def h = """
===================================================
Task Args:
whitepaper    White Paper to build. EX `whitepaper_filename`
e.g.

./gradlew buildWhitePaper -Pwhitepaper=Confluent_Platform_Reference_Architecture_for_Kubernetes
===================================================
"""

    if (project.hasProperty("whitepaper")) {
      myTask.sources {
        include "whitepapers/${project.property("whitepaper")}.adoc"
      }
    } else {
      throw new IllegalArgumentException("Missing a whitepaper name!\n$h")
    }
  }

  doLast {
    println "Finished paper (cmd+click): ${outputDir}/pdf/whitepapers/${whitePaperName}.pdf"
  }
}